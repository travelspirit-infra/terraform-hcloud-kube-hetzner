apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .Values.postgresql.cluster.name }}
  namespace: postgres
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  instances: {{ .Values.postgresql.cluster.instances }}
  
  # PostgreSQL version
  imageName: {{ .Values.postgresql.imageName }}
  
  # Primary instance configuration
  primaryUpdateStrategy: {{ .Values.postgresql.primaryUpdateStrategy }}
  
  # PostgreSQL configuration
  postgresql:
    parameters:
      {{- range $key, $value := .Values.postgresql.parameters }}
      {{ $key }}: {{ $value | quote }}
      {{- end }}
      
  # Bootstrap configuration
  bootstrap:
    initdb:
      database: {{ .Values.postgresql.database.name }}
      owner: {{ .Values.postgresql.database.owner }}
      secret:
        name: postgres-app-user
      dataChecksums: {{ .Values.postgresql.database.dataChecksums }}
      encoding: {{ .Values.postgresql.database.encoding }}
      localeCollate: {{ .Values.postgresql.database.localeCollate }}
      localeCType: {{ .Values.postgresql.database.localeCType }}
      
  # Superuser secret reference
  superuserSecret:
    name: postgres-superuser-secret
    
  # Storage configuration
  storage:
    size: {{ .Values.postgresql.storage.size }}
    storageClass: {{ .Values.postgresql.storage.storageClass }}
    
  # Resource requests and limits
  resources:
    requests:
      memory: {{ .Values.postgresql.resources.requests.memory | quote }}
      cpu: {{ .Values.postgresql.resources.requests.cpu | quote }}
    limits:
      memory: {{ .Values.postgresql.resources.limits.memory | quote }}
      cpu: {{ .Values.postgresql.resources.limits.cpu | quote }}
      
  {{- if .Values.postgresql.monitoring.enabled }}
  # Monitoring configuration
  monitoring:
    enabled: true
  {{- end }}
    
  {{- if .Values.postgresql.backup.enabled }}
  # Backup configuration
  backup:
    retentionPolicy: "30d"
    # Add S3 configuration here when ready
  {{- end }}