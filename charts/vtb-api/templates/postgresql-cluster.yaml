{{- if .Values.postgresql.enabled }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ include "vtb-api.fullname" . }}-postgres
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vtb-api.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  instances: {{ .Values.postgresql.cluster.instances | default 1 }}
  
  # Use ARM64-compatible PostgreSQL image
  imageName: {{ .Values.postgresql.cluster.imageName | default "ghcr.io/cloudnative-pg/postgresql:16" }}
  
  # Add tolerations for ARM64 nodes
  affinity:
    tolerations:
      - key: "architecture"
        value: "arm64"
        effect: "NoSchedule"
        
  storage:
    size: {{ .Values.postgresql.cluster.storage.size | default "10Gi" }}
    storageClass: {{ .Values.postgresql.cluster.storage.storageClass | default "hcloud-volumes" }}
    
  resources:
    requests:
      memory: {{ .Values.postgresql.cluster.resources.requests.memory | default "256Mi" }}
      cpu: {{ .Values.postgresql.cluster.resources.requests.cpu | default "100m" }}
    limits:
      memory: {{ .Values.postgresql.cluster.resources.limits.memory | default "512Mi" }}
      cpu: {{ .Values.postgresql.cluster.resources.limits.cpu | default "500m" }}

  # Database configuration
  postgresql:
    parameters:
      # Performance tuning for small instances
      shared_buffers: "64MB"
      effective_cache_size: "256MB"
      maintenance_work_mem: "16MB"
      # Logging
      log_statement: "all"
      log_min_duration_statement: "1000"
      # Connection settings
      max_connections: "100"

  # Backup configuration (optional)
  {{- if .Values.postgresql.backup.enabled }}
  backup:
    retentionPolicy: {{ .Values.postgresql.backup.retentionPolicy | default "7d" | quote }}
    {{- if .Values.postgresql.backup.s3 }}
    barmanObjectStore:
      destinationPath: {{ .Values.postgresql.backup.s3.destinationPath | quote }}
      {{- if .Values.postgresql.backup.s3.endpointURL }}
      endpointURL: {{ .Values.postgresql.backup.s3.endpointURL | quote }}
      {{- end }}
      s3Credentials:
        accessKeyId:
          name: {{ .Values.postgresql.backup.s3.credentialsSecret | default (printf "%s-backup-s3" (include "vtb-api.fullname" .)) }}
          key: "access-key-id"
        secretAccessKey:
          name: {{ .Values.postgresql.backup.s3.credentialsSecret | default (printf "%s-backup-s3" (include "vtb-api.fullname" .)) }}
          key: "secret-access-key"
    {{- end }}
  {{- end }}

  # Monitoring (if enabled)
  {{- if .Values.postgresql.monitoring.enabled }}
  monitoring:
    enabled: true
    {{- if .Values.postgresql.monitoring.prometheusRule }}
    prometheusRule:
      enabled: true
    {{- end }}
  {{- end }}

---
{{- end }}