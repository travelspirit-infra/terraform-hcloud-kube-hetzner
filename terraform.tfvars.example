# Only the first values starting with a * are obligatory, the rest can remain with their default values, or you
# could adapt them to your needs.
#
# Note that some values, notably "location" and "public_key" have no effect after the initial cluster has been setup.
# This is in order to keep terraform from re-provisioning all nodes at once which would loose data. If you want to update,
# those, you should instead change the value here and then manually re-provision each node one-by-one. Grep for "lifecycle".

# * Your Hetzner project API token
hcloud_token = "xxxxxxxxxxxxxxxxxxYYYYYYYYYYYYYYYYYYYzzzzzzzzzzzzzzzzzzzzz"
# * Your public key
public_key   = "/home/username/.ssh/id_ed25519.pub"
# * Your private key, must be "private_key = null" when you want to use ssh-agent, for a Yubikey like device auth or an SSH key-pair with passphrase
private_key  = "/home/username/.ssh/id_ed25519"

# These can be customized, or left with the default values
# For Hetzner locations see https://docs.hetzner.com/general/others/data-centers-and-connection/
network_region   = "eu-central" # change to `us-east` if location is ash

# For the control-planes, at least 3 nodes is recommended for HA, otherwise you need to turn off automatic upgrade (see ReadMe).
# As per rancher docs, it must be always an odd number, never even! See https://rancher.com/docs/k3s/latest/en/installation/ha-embedded/
# For instance, 1 is ok (non-HA), 2 not ok, 3 is ok (becomes HA). It does not matter if they are in the same nodepool or not! So they can be in different locations, and of different types.

# Of course, you can choose any number of nodepools you want, with the location you want. The only contraint on the location is that you need to stay in the same network region, basically Europe or US, see above.
# For the server type, # The type of control plane nodes, the minimum instance supported is cpx11 (just a few cents more than cx11), see https://www.hetzner.com/cloud.

# IMPORTANT: Once the cluster is created, you can change nodepool count, and even set it to 0 (in the case of the first control-plane nodepool, the minimum is 1),
# You can also rename it (if the count is taken to 0), but do not remove a nodepool from the list after the cluster is created. This is due to how IPs are allocated.
# Once the cluster is initialized, you cannot add more control plane nodepools. You can freely add others agent nodepools the end of the list if you want! 
# Also, before decreasing the count of any nodepools to 0, it's important to drain and cordon it the nodes in question, otherwise it will leave your cluster in a bad state.

# Before initializing the cluster, you can change all parameters and add or remove any nodepools.

# If you want to have a single node cluster, just have 1 control plane nodepools with a count of 1, and one agent nodepool with a count of 0.

# Example below:

control_plane_nodepools = [
  {
    name        = "control-plane-fsn1",
    server_type = "cpx11",
    location    = "fsn1",
    labels      = [],
    taints      = [],
    count       = 2
  },
  {
    name        = "control-plane-nbg1",
    server_type = "cpx11",
    location    = "nbg1",
    labels      = [],
    taints      = [],
    count       = 1
  }
]

agent_nodepools = [
  {
    name        = "agent-small",
    server_type = "cpx11",
    location    = "fsn1",
    labels      = [],
    taints      = [],
    count       = 1
  },
  {
    name        = "agent-large",
    server_type = "cpx21",
    location    = "nbg1",
    labels      = [],
    taints      = [],
    count       = 1
  },
  {
    name        = "storage",
    server_type = "cpx21",
    location    = "fsn1",
    labels = [
      "node.kubernetes.io/server-usage=storage"
    ],
    taints = [
      "server-usage=storage:NoSchedule"
    ],
    count = 1
  }
]

# That will depend on how much load you want it to handle, see https://www.hetzner.com/cloud/load-balancer
load_balancer_type     = "lb11"

load_balancer_location = "fsn1"

### The following values are fully optional

# If you want to use a specific Hetzner CCM and CSI version, set them below, otherwise leave as is for the latest versions
# hetzner_ccm_version = ""
# hetzner_csi_version = ""


# If you want to use letsencrypt with tls Challenge, the email address is used to send you certificates expiration notices
# traefik_acme_tls = true
# traefik_acme_email = "mail@example.com"

# If you want to use disable the traefik ingress controller, you can. By default is it enabled!
# traefik_enabled = false

# If you want to disable the metric server, you can! By defaults it is enabled.
# metrics_server_enabled = false

# If you want to allow non-control-plane workloads to run on the control-plane nodes set "true" below. The default is "false".
# True by default for single node clusters.
# allow_scheduling_on_control_plane = true

# If you want to disable automatic upgrade of k3s, you can set this to false, default is "true".
# automatically_upgrade_k3s = false

# Allows you to specify either stable, latest, or testing (defaults to stable), see https://rancher.com/docs/k3s/latest/en/upgrades/basic/
# initial_k3s_channel = "latest"

# The cluster name, by default "k3s"
# cluster_name = ""

# Whether to use the cluster name in the node name, in the form of {cluster_name}-{nodepool_name} the default is "true".
# use_cluster_name_in_node_name = false

# Adding extra firewall rules, like opening a port
# In this example with allow port TCP 5432 for a Postgres service we will open via a nodeport and allow outgoing SMTP traffic on port TCP 465
# More info on the format here https://registry.terraform.io/providers/hetznercloud/hcloud/latest/docs/resources/firewall
# extra_firewall_rules = [
#   {
#     direction = "in"
#     protocol  = "tcp"
#     port      = "5432"
#     source_ips = [
#       "0.0.0.0/0"
#     ]
#   },
#   {
#     direction = "out"
#     protocol  = "tcp"
#     port      = "465"
#     destination_ips = [
#       "0.0.0.0/0"
#     ]
#   },
# ]

# If you want to configure additional Arguments for traefik, enter them here as a list and in the form of traefik CLI arguments; see https://doc.traefik.io/traefik/reference/static-configuration/cli/
# Example: traefik_additional_options = ["--log.level=DEBUG", "--tracing=true"]
# traefik_additional_options = []
